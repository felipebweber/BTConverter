//
// StatusUpdatesBetaAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class StatusUpdatesBetaAPI {
    /**
     List all status_updates with data (description, category, created_at, user, user_title and pin)

     - parameter category: (query) Filtered by category (eg. general, milestone, partnership, exchange_listing, software_release, fund_movement, new_listings, event) (optional)
     - parameter projectType: (query) Filtered by Project Type (eg. coin, market). If left empty returns both status from coins and markets. (optional)
     - parameter perPage: (query) Total results per page (optional)
     - parameter page: (query) Page through results (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func statusUpdatesGet(category: String? = nil, projectType: String? = nil, perPage: Int? = nil, page: Int? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        statusUpdatesGetWithRequestBuilder(category: category, projectType: projectType, perPage: perPage, page: page).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     List all status_updates with data (description, category, created_at, user, user_title and pin)
     - GET /status_updates

     - parameter category: (query) Filtered by category (eg. general, milestone, partnership, exchange_listing, software_release, fund_movement, new_listings, event) (optional)
     - parameter projectType: (query) Filtered by Project Type (eg. coin, market). If left empty returns both status from coins and markets. (optional)
     - parameter perPage: (query) Total results per page (optional)
     - parameter page: (query) Page through results (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func statusUpdatesGetWithRequestBuilder(category: String? = nil, projectType: String? = nil, perPage: Int? = nil, page: Int? = nil) -> RequestBuilder<Void> {
        let path = "/status_updates"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "category": category, 
                        "project_type": projectType, 
                        "per_page": perPage?.encodeToJSON(), 
                        "page": page?.encodeToJSON()
        ])

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
