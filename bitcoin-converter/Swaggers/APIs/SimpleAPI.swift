//
// SimpleAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class SimpleAPI {
    /**
     Get the current price of any cryptocurrencies in any other supported currencies that you need.

     - parameter ids: (query) id of coins, comma-separated if querying more than 1 coin 847 to &lt;b&gt;&#x60;coins/list&#x60;&lt;/b&gt; 
     - parameter vsCurrencies: (query) vs_currency of coins, comma-separated if querying more than 1 vs_currency *refers to &lt;b&gt;&#x60;simple/supported_vs_currencies&#x60;&lt;/b&gt; 
     - parameter includeMarketCap: (query) &lt;b&gt;true/false&lt;/b&gt; to include market_cap, &lt;b&gt;default: false&lt;/b&gt; (optional)
     - parameter include24hrVol: (query) &lt;b&gt;true/false&lt;/b&gt; to include 24hr_vol, &lt;b&gt;default: false&lt;/b&gt; (optional)
     - parameter include24hrChange: (query) &lt;b&gt;true/false&lt;/b&gt; to include 24hr_change, &lt;b&gt;default: false&lt;/b&gt; (optional)
     - parameter includeLastUpdatedAt: (query) &lt;b&gt;true/false&lt;/b&gt; to include last_updated_at of price, &lt;b&gt;default: false&lt;/b&gt; (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func simplePriceGet(ids: String, vsCurrencies: String, includeMarketCap: String? = nil, include24hrVol: String? = nil, include24hrChange: String? = nil, includeLastUpdatedAt: String? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        simplePriceGetWithRequestBuilder(ids: ids, vsCurrencies: vsCurrencies, includeMarketCap: includeMarketCap, include24hrVol: include24hrVol, include24hrChange: include24hrChange, includeLastUpdatedAt: includeLastUpdatedAt).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Get the current price of any cryptocurrencies in any other supported currencies that you need.
     - GET /simple/price
     - 

     - parameter ids: (query) id of coins, comma-separated if querying more than 1 coin 847 to &lt;b&gt;&#x60;coins/list&#x60;&lt;/b&gt; 
     - parameter vsCurrencies: (query) vs_currency of coins, comma-separated if querying more than 1 vs_currency *refers to &lt;b&gt;&#x60;simple/supported_vs_currencies&#x60;&lt;/b&gt; 
     - parameter includeMarketCap: (query) &lt;b&gt;true/false&lt;/b&gt; to include market_cap, &lt;b&gt;default: false&lt;/b&gt; (optional)
     - parameter include24hrVol: (query) &lt;b&gt;true/false&lt;/b&gt; to include 24hr_vol, &lt;b&gt;default: false&lt;/b&gt; (optional)
     - parameter include24hrChange: (query) &lt;b&gt;true/false&lt;/b&gt; to include 24hr_change, &lt;b&gt;default: false&lt;/b&gt; (optional)
     - parameter includeLastUpdatedAt: (query) &lt;b&gt;true/false&lt;/b&gt; to include last_updated_at of price, &lt;b&gt;default: false&lt;/b&gt; (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func simplePriceGetWithRequestBuilder(ids: String, vsCurrencies: String, includeMarketCap: String? = nil, include24hrVol: String? = nil, include24hrChange: String? = nil, includeLastUpdatedAt: String? = nil) -> RequestBuilder<Void> {
        let path = "/simple/price"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "ids": ids, 
                        "vs_currencies": vsCurrencies, 
                        "include_market_cap": includeMarketCap, 
                        "include_24hr_vol": include24hrVol, 
                        "include_24hr_change": include24hrChange, 
                        "include_last_updated_at": includeLastUpdatedAt
        ])

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get list of supported_vs_currencies.

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func simpleSupportedVsCurrenciesGet(completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        simpleSupportedVsCurrenciesGetWithRequestBuilder().execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Get list of supported_vs_currencies.
     - GET /simple/supported_vs_currencies
     - 


     - returns: RequestBuilder<Void> 
     */
    open class func simpleSupportedVsCurrenciesGetWithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/simple/supported_vs_currencies"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get current price of tokens (using contract addresses) for a given platform in any other currency that you need.

     - parameter _id: (path) The id of the platform issuing tokens (Only &#x60;ethereum&#x60; is supported for now) 
     - parameter contractAddresses: (query) The contract address of tokens, comma separated 
     - parameter vsCurrencies: (query) vs_currency of coins, comma-separated if querying more than 1 vs_currency *refers to &lt;b&gt;&#x60;simple/supported_vs_currencies&#x60;&lt;/b&gt; 
     - parameter includeMarketCap: (query) &lt;b&gt;true/false&lt;/b&gt; to include market_cap, &lt;b&gt;default: false&lt;/b&gt; (optional)
     - parameter include24hrVol: (query) &lt;b&gt;true/false&lt;/b&gt; to include 24hr_vol, &lt;b&gt;default: false&lt;/b&gt; (optional)
     - parameter include24hrChange: (query) &lt;b&gt;true/false&lt;/b&gt; to include 24hr_change, &lt;b&gt;default: false&lt;/b&gt; (optional)
     - parameter includeLastUpdatedAt: (query) &lt;b&gt;true/false&lt;/b&gt; to include last_updated_at of price, &lt;b&gt;default: false&lt;/b&gt; (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func simpleTokenPriceIdGet(_id: String, contractAddresses: String, vsCurrencies: String, includeMarketCap: String? = nil, include24hrVol: String? = nil, include24hrChange: String? = nil, includeLastUpdatedAt: String? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        simpleTokenPriceIdGetWithRequestBuilder(_id: _id, contractAddresses: contractAddresses, vsCurrencies: vsCurrencies, includeMarketCap: includeMarketCap, include24hrVol: include24hrVol, include24hrChange: include24hrChange, includeLastUpdatedAt: includeLastUpdatedAt).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Get current price of tokens (using contract addresses) for a given platform in any other currency that you need.
     - GET /simple/token_price/{id}
     - 

     - parameter _id: (path) The id of the platform issuing tokens (Only &#x60;ethereum&#x60; is supported for now) 
     - parameter contractAddresses: (query) The contract address of tokens, comma separated 
     - parameter vsCurrencies: (query) vs_currency of coins, comma-separated if querying more than 1 vs_currency *refers to &lt;b&gt;&#x60;simple/supported_vs_currencies&#x60;&lt;/b&gt; 
     - parameter includeMarketCap: (query) &lt;b&gt;true/false&lt;/b&gt; to include market_cap, &lt;b&gt;default: false&lt;/b&gt; (optional)
     - parameter include24hrVol: (query) &lt;b&gt;true/false&lt;/b&gt; to include 24hr_vol, &lt;b&gt;default: false&lt;/b&gt; (optional)
     - parameter include24hrChange: (query) &lt;b&gt;true/false&lt;/b&gt; to include 24hr_change, &lt;b&gt;default: false&lt;/b&gt; (optional)
     - parameter includeLastUpdatedAt: (query) &lt;b&gt;true/false&lt;/b&gt; to include last_updated_at of price, &lt;b&gt;default: false&lt;/b&gt; (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func simpleTokenPriceIdGetWithRequestBuilder(_id: String, contractAddresses: String, vsCurrencies: String, includeMarketCap: String? = nil, include24hrVol: String? = nil, include24hrChange: String? = nil, includeLastUpdatedAt: String? = nil) -> RequestBuilder<Void> {
        var path = "/simple/token_price/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "contract_addresses": contractAddresses, 
                        "vs_currencies": vsCurrencies, 
                        "include_market_cap": includeMarketCap, 
                        "include_24hr_vol": include24hrVol, 
                        "include_24hr_change": include24hrChange, 
                        "include_last_updated_at": includeLastUpdatedAt
        ])

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
